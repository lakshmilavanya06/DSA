// Problem: find-the-smallest-divisor-given-a-threshold
// Link: https://leetcode.com/problems/find-the-smallest-divisor-given-a-threshold/?source=submission-noac
// Topic: Binary search
// Difficulty: Medium
// Approach:  Optimized with BS
// Date Solved: 26-06-2025
//time complexity:O(n logn) and space complexity:O(1)
//time taken:50 mins


class Solution {
    public int smallestDivisor(int[] nums, int threshold) {
        int l=0,h=Integer.MIN_VALUE,n=nums.length;
        for(int i=0;i<n;i++){
            if(nums[i]>h){
                h=nums[i];
            }
        }
        int small=h; 
        while(l<=h){
            int m=l+(h-l)/2;
            if(fun(nums,m,n)<=threshold){
                small=m;
                h=m-1;
            }else{
                l=m+1;
            }
            

        }
        return small;
        
    }private int fun(int[]nums, int m,int n){
        int s=0;
        for(int x:nums){
        if(x%m!=0){
            s=s+(x/m)+1;
        }else{
            s=s+x/m;
        }
        }
        return s;
    }
}